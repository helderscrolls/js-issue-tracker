// Event Handler for the Form Submit Button
document.getElementById('issueInputForm').addEventListener('submit', saveIssue);

// Saving Issues
function saveIssue(e) {
  // the input values from the form controls are retrieved and stored in local variables;
  // the issueStatus is set to Open and issueId is generated by calling function chance.guid();
  var issueDesc = document.getElementById('issueDescInput').value;
  var issueSeverity = document.getElementById('issueSeverityInput').value;
  var issueAssignedTo = document.getElementById('issueAssignedToInput').value;
  var issueId = chance.guid();
  var issueStatus = 'Open';

  // the new issue object is inserted into the issues object in Local Storage;
  var issue = {
    id: issueId,
    description: issueDesc,
    severity: issueSeverity,
    assignedTo: issueAssignedTo,
    status: issueStatus
  }

  if (localStorage.getItem('issues') == null) {
    var issues = [];
    issues.push(issue);
    localStorage.setItem('issues', JSON.stringify(issues));
  } else {
    var issues = JSON.parse(localStorage.getItem('issues'));
    issues.push(issue);
    localStorage.setItem('issues', JSON.stringify(issues));
  }

  // Having inserted the issues object into Local Storage 
  // we need to empty the form by calling the reset() method;
  document.getElementById('issueInputForm').reset();

  // Weâ€™re calling fetchIssues() again to make sure that the list output 
  // is re-generated and that the new issue item will be visible;
  fetchIssues();

  e.preventDefault();
}

// Set the Closed Status on a Issue Ticket via the id of the current item;
function setStatusClosed(id) {
  var issues = JSON.parse(localStorage.getItem('issues'));

  for (var i = 0; i < issues.length; i++) {
    if (issues[i].id == id) {
      issues[i].status = 'Closed';
    }
  }

  localStorage.setItem('issues', JSON.stringify(issues));

  fetchIssues();
}


// Delete a Issue Ticket via its id from the current list of Tickets;
function deleteIssue(id) {
  var issues = JSON.parse(localStorage.getItem('issues'));

  for (var i = 0; i < issues.length; i++) {
    if (issues[i].id == id) {
      issues.splice(i, 1);
    }
  }

  localStorage.setItem('issues', JSON.stringify(issues));

  fetchIssues();
}


// Fetching Issue Data From Local Storage;
function fetchIssues() {
  // GET Issues Data from Local Storage and Parse it from a string to a JSON file;
  var issues = JSON.parse(localStorage.getItem('issues'));

  // Get the HTML <div> (id="issuesList");
  var issuesList = document.getElementById('issuesList');

  // Empty the string;
  issuesList.innerHTML = '';


  // Loops over the elements in issues;
  for (var i = 0; i < issues.length; i++) {
    var id = issues[i].id;
    var desc = issues[i].description;
    var severity = issues[i].severity;
    var assignedTo = issues[i].assignedTo;
    var status = issues[i].status;

    // Adds the HTML output for that element to issuesList;
    issuesList.innerHTML += '<div class="well">' +
                            '<h6>Issue ID: ' + id + '</h6>' +
                            '<p><span class="label label-info">' + status + '</span></p>' +
                            '<h3>' + desc + '</h3>' +
                            '<p><span class="glyphicon glyphicon-time"></span> ' + severity + '</p>' +
                            '<p><span class="glyphicon glyphicon-user"></span> ' + assignedTo + '</p>' +
                            '<a href="#" onclick="setStatusClosed(\'' + id + '\')" class="btn btn-warning">Close</a> ' +
                            '<a href="#" onclick="deleteIssue(\'' + id + '\')" class="btn btn-danger">Delete</a>' +
                            '</div>';
  }
}